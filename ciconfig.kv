#:kivy 1.9.1

<OutputItem>:
    canvas.after:
        Line:
            rounded_rectangle: self.x,self.y,self.width,self.height, 10.0
    size_hint_y: None
    height: mainLayout.minimum_height
    GridLayout:
        id: mainLayout
        size: root.size
        pos: root.pos
        spacing: '8dp'
        padding: '8dp'
        rows: 3
        BoxLayout:
            size_hint_y: None
            height:'32dp'
            Label:
                text: str(root.number)
                size_hint: None, None
                height:'32dp'
                width:'32dp'
            ToggleButton:
                text: "active" if root.isActive else "inactive"
                size_hint_y: None
                height:'32dp'
                state: 'down' if root.isActive else 'normal'
                on_state: root.isActive = True if self.state == 'down' else False
            ToggleButton:
                pos_hint: {'x': 0.5, 'y': 0.2}
                size_hint: None, None
                height:'24dp'
                width:'24dp'
                background_normal: 'images/greenled_off.png'
                background_down: 'images/greenled_on2.png'
                border: 0, 0, 0, 0
                state: 'down' if root.cloudValue else 'normal'
        TextInput:
            size_hint_y: None
            height:'32dp'
            write_tab: False
            hint_text:'label'
            text: root.assetLabel
            on_text: root.assetLabel = args[1]
            disabled: not root.isActive
        ToggleButton:
            text: 'On' if root.value else 'Off'
            disabled: not root.assetId or not root.isActive
            size_hint_y: None
            height:'40dp'
            state: 'down' if root.value else 'normal'
            on_state: root.value = True if self.state == 'down' else False


<OutputsScreen>:
    relays: grdRelays
    outputs: grdOutputs
    ScrollView:
        size_hint: 1, 1
        GridLayout:
            rows: 4
            size_hint_y: None
            height: self.minimum_height
            Label:
                text: 'relays:'
                size_hint_y: None
                height: '32dp'
            GridLayout:
                id: grdRelays
                size_hint_y: None
                height: self.minimum_height
                padding: '8dp'
                spacing: '8dp'
                cols: 4
                rows: 4
            Label:
                text: 'outputs:'
                size_hint_y: None
                height: '32dp'
            GridLayout:
                id: grdOutputs
                size_hint_y: None
                height: self.minimum_height
                padding: '8dp'
                spacing: '8dp'
                cols: 4
                rows: 4


<InputItem>:
    canvas.after:
        Line:
            rounded_rectangle: self.x,self.y,self.width,self.height, 10.0
    size_hint_y: None
    height: mainLayout.minimum_height
    GridLayout:
        id: mainLayout
        size: root.size
        pos: root.pos
        spacing: '8dp'
        padding: '8dp'
        rows: 3
        BoxLayout:
            size_hint_y: None
            height:'32dp'
            Label:
                text: str(root.number)
                size_hint: None, None
                height:'32dp'
                width:'32dp'
            Button:
                text: 'mode: ' + root.mode
                size_hint_y: None
                height:'32dp'
                on_press: root.showModes(self)
            ToggleButton:
                pos_hint: {'x': 0.5, 'y': 0.2}
                size_hint: None, None
                height:'24dp'
                width:'24dp'
                value: root.value
                background_normal: 'images/greenled_off.png'
                background_down: 'images/greenled_on2.png'
                border: 0, 0, 0, 0
                state: root.value
        TextInput:
            size_hint_y: None
            height:'32dp'
            write_tab: False
            hint_text:'label'
            text: root.label
            on_text: root.label = args[1]
            disabled: True if root.mode == 'Disabled' else False
        Button:
            text: 'output: ' + root.outputLabel
            disabled: True if root.mode == 'Disabled' else False
            size_hint_y: None
            height:'32dp'
            on_press: root.showOutputs(self)



<MainWindow>:
    editbar: actview
    inputsPage: ctrlInputs
    outputsPage: ctrlOutputs
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: 'vertical'
        ActionBar:
            size_hint: 1, None
            ActionView:
                id: actview
                use_separator: True
                ActionPrevious:
                    title: 'Controllino - home control'
                    with_previous: False
                ActionOverflow:
                    ActionButton:
                        markup: True
                        text: 'Credentials'
                        on_press: root.showCredentials()
                ActionButton:
                    markup: True
                    text: 'inputs'
                    on_release: sm.current = 'inputs'
                ActionButton:
                    markup: True
                    text: 'outputs'
                    on_release: sm.current = 'outputs'
        ScreenManager:
            id: sm
            InputsScreen:
                id: ctrlInputs
                name: 'inputs'
            OutputsScreen:
                id: ctrlOutputs
                name: 'outputs'